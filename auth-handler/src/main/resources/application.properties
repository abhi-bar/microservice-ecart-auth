server.port=8085
spring.application.name=auth-handler
spring.config.import=env.properties
spring.app.jwtExpirationMs=300000000

frontend.url=http://localhost:5173/

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa


spring.security.oauth2.client.registration.google.client-id=${GOOGLE-CLIENT-ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE-CLIENT-SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.user-name-attribute=email

spring.security.oauth2.client.registration.github.client-id=${GITHUB-CLIENT-ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB-CLIENT-SECRET}
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.client-name=GitHub

# Kafka setup
spring.kafka.bootstrap-servers=localhost:9092
app.kafka.topic.user-created=user-created-draft

private-key-path: classpath:rsa/private.pem
public-key-path: classpath:rsa/public.pem

access-token-expiration-ms: 900000
refresh-token-expiration-ms: 604800000

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


logging.level.org.springframework=info
logging.level.org.hibernate.SQL=info
logging.level.org.springframework.security=info
logging.level.com.ecommerce.project=info
